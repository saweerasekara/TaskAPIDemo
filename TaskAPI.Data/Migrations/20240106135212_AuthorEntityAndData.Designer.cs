// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAPI.Data;

#nullable disable

namespace TaskAPI.Data.Migrations
{
    [DbContext(typeof(TodoDBContext))]
    [Migration("20240106135212_AuthorEntityAndData")]
    partial class AuthorEntityAndData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Name 1"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Name 2"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Name 3"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Name 4"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2024, 1, 6, 19, 22, 12, 134, DateTimeKind.Local).AddTicks(5654),
                            Description = "Test",
                            Due = new DateTime(2024, 1, 8, 19, 22, 12, 134, DateTimeKind.Local).AddTicks(5663),
                            Status = 0,
                            Title = "Db record 1"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Created = new DateTime(2024, 1, 6, 19, 22, 12, 134, DateTimeKind.Local).AddTicks(5668),
                            Description = "Test2",
                            Due = new DateTime(2024, 1, 8, 19, 22, 12, 134, DateTimeKind.Local).AddTicks(5669),
                            Status = 0,
                            Title = "Db record 2"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Created = new DateTime(2024, 1, 6, 19, 22, 12, 134, DateTimeKind.Local).AddTicks(5671),
                            Description = "Test3",
                            Due = new DateTime(2024, 1, 8, 19, 22, 12, 134, DateTimeKind.Local).AddTicks(5672),
                            Status = 0,
                            Title = "Db record 3"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.HasOne("TaskAPI.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
